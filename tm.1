.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TM 1"
.TH TM 1 "2017-11-13" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
tm \- render timestamps in a human\-readable format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    tm 1510588745
\&
\&    tm 1510588745000 1479052745000
\&    
\&    (echo 1510588745; echo 1479052745) | tm
\&
\&    tm 1479052745000000000
\&
\&    tm \-\-paste
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBtm\fR reads numeric timestamps and prints them in human-readable format.
.PP
Timestamps must be either \s-1UNIX\s0 time (seconds since the \s-1UNIX\s0 epoch, of
January 1, 1990; see \fItime\fR\|(3)), or \s-1UNIX\s0 time in milliseconds since the
epoch, or \s-1UNIX\s0 time in nanoseconds since the epoch.
.PP
\&\fBtm\fR can run in three modes.
.IP "\(bu" 4
When run with arguments, \fBtm\fR attempts to render every argument, and prints
the human-readable versions one per line (in the same order that they were
listed in the argument list.) If only a single argument is given, the output
will consist of nothing but the human-readable timestamp; otherwise, output
lines may include a prefix indicating which argument they correspond to.
.IP "\(bu" 4
When run without arguments, \fBtm\fR reads timestamps from standard input. Each
line on standard input should be a single timestamp. For each input line,
\&\fBtm\fR will print the corresponding human-readable version alone on a line to
standard output.
.IP "\(bu" 4
When run with the \f(CW\*(C`\-\-paste\*(C'\fR option, \fBtm\fR will run continuously. It will
monitor the system clipboard, and, when the clipboard appears to contain a
timestamp, it will render the timestamp to standard output.
.Sp
The intent is that somebody who frequently does timestamp conversions can
simply leave \f(CW\*(C`tm \-\-paste\*(C'\fR running in a terminal; all they need to do to render
a timestamp is copy it, and the human-readable version will be printed by \fBtm\fR
with no further action necessary.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-paste\fR" 2
.IX Item "--paste"
Instead of printing timestamps from the arguments or standard input, run
continuously, printing any timestamps found on the system clipboard.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
Returns 0 if all timestamps were successfully parsed and rendered.
Returns non-zero otherwise.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Render a single timestamp, given in seconds:
.PP
.Vb 3
\&    $ tm 1510588745
\&    Mon Nov 13 10:59:05 2017
\&    $
.Ve
.PP
Render multiple timestamps (as arguments), given in milliseconds:
.PP
.Vb 4
\&    $ tm 1510588745000 1479052745000
\&    1510588745000 Mon Nov 13 10:59:05 2017
\&    1479052745000 Sun Nov 13 10:59:05 2016
\&    $
.Ve
.PP
Render multiple timestamps (on standard input), given in a mix of seconds and
milliseconds:
.PP
.Vb 4
\&    $ (echo 1510588745; echo 1479052745000) | tm
\&    Mon Nov 13 10:59:05 2017
\&    Sun Nov 13 10:59:05 2016
\&    $
.Ve
.PP
Render a single timestamp, given in nanoseconds:
.PP
.Vb 3
\&    $ tm 1479052745000000000
\&    Sun Nov 13 10:59:05 2016
\&    $
.Ve
.PP
Follow the clipboard. Note that (1) when a timestamp is copied, it is rendered
shortly after; (2) things that don't look like timestamps are silently ignored;
and (3) trailing whitespace is permitted.
.PP
.Vb 10
\&    $ tm \-\-paste &
\&    [1] 2992
\&    $ echo 1510588745 | pbcopy; sleep 5
\&    1510588745: Mon Nov 13 10:59:05 2017
\&    $ echo \*(Aqsome text including the number 1479052745000\*(Aq | pbcopy; sleep 5
\&    $ echo 1510588745000 | pbcopy; sleep 5
\&    1510588745000: Mon Nov 13 10:59:05 2017
\&    $ (echo 1510588745000000000; echo; echo) | pbcopy; sleep 5
\&    1510588745000000000: Mon Nov 13 10:59:05 2017
\&    $
.Ve
.SH "CAVEATS"
.IX Header "CAVEATS"
\&\fBtm\fR uses some huerestics to determine whether a timestamp is in seconds,
milliseconds, or nanoseconds. Those huerestics work for timestamps between 1971
and 2039 (inclusive). Using timestamps outside that range will result in an
error.
.PP
When run in \fB\-\-paste\fR mode, \fBtm\fR may need to poll the system clipboard. There is
a small delay between polls. This ensures that \fBtm\fR uses negligible \s-1CPU. \s0 It
also means that there may be a delay of a couple seconds between when a
timestamp is copied and when \fBtm\fR renders it, and that if multiple timestamps
are copied in rapid succession, \fBtm\fR may miss some.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jonathan Sailor.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2015\-2017, Facebook.
Copyright 2015\-2017, Jonathan Sailor.
.PP
This script is free software; you may redistribute it and/or modify it
under the terms of the Perl Artistic License.
